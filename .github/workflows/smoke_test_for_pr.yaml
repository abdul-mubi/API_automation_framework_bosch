name: Smoke Test for Pull Request

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened]
    branches:
      - master
  pull_request_review:
    types: [submitted]

jobs:
  build:
    if: ${{ (github.event_name != 'pull_request_review') || (github.event.review.state == 'approved')}}
    runs-on:
    - BCN
    - MC
    - self-hosted
    outputs:
      skip_smoke: ${{ steps.fetch_branch_details.outputs.SKIP_GITHUB_RUN }}
      smoke_branch_name: ${{ steps.fetch_branch_details.outputs.BRANCH_NAME }}
    steps:
      - name: Fetch Branch Details
        id: fetch_branch_details
        shell: bash
        run: |
          if [ "${{github.event_name}}" == "pull_request" ]; then
            echo "BRANCH_NAME=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          elif [ "${{github.event_name}}" == "pull_request_review" ]; then
            echo "BRANCH_NAME=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
            MERGE_STATE=$(curl -H "Accept: application/vnd.github+json"  -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://github.boschdevcloud.com/api/v3/repos/MC/tedtitans-automation-repo/pulls/${{github.event.pull_request.number}}"  | jq -r '.mergeable_state')
            echo "Merge State"
            echo $MERGE_STATE
            if [[ "$MERGE_STATE" == "blocked" ]]; then
              echo "PR is still waiting for additional Approvals, skipping Smoke Execution"
              echo "SKIP_GITHUB_RUN=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          else
            echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          fi
  Trigger_smoke:
    needs: build
    if: needs.build.outputs.skip_smoke != 'true'
    uses: MC/tedtitans-automation-repo/.github/workflows/test_suite_executor.yaml@master
    with:
      test_suite: Smoke
      device_type: All_device_types
      new_test_execution: Not_Required
      suite_type: All
      trigger_event: Pull_Request
      branch_name: ${{needs.build.outputs.smoke_branch_name}}
    secrets:
      JIRA_URL: ${{ secrets.JIRA_URL }}
      JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
      JIRA_PASSWORD: ${{ secrets.JIRA_PASSWORD }}
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      WORKFLOW_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
      PROXY_URL: ${{ secrets.PROXY_URL }}
