*****************************************************************************
***** Configuration for Xcellsis                                        *****
*****************************************************************************

; 2008-07-11 ETAS-Mle: change SamplePoint 70% --> 80% like in A2L-File
; 2008-07-11 ETAS-Mle: changed default timings back with new prof command UDSB_SET_TIMING()
; 2007-11-28 ETAS-Mle: changed for UDSonCAN programming (default timings, AALFI_... )
; 2003-08-07 ETAS-PU : change p3max from 5s to 6s, necessary for can programming
; 2003-01-27 ETAS-PU :
; Change baudrate and baudrateparameters for 56 MHz frequency
; Correction of Pattern for ETK Mailbox from 903000 to 902000
; Correct end adresses of destination and source area from 0xF0 to 0xEF

ECU_ADDR:,             0x12;              ; address of ECU on K-line
PROJECT_NAME:,         UDSonCAN_StdID_ExtAddr_1MBaud;  ; project name
KWP2000_DIA :,         UDSonCAN;          ; version of keyword protocol
PROG_ST_ADDR:,         0xF1;              ; address of tester on K-Line
;
;
;                      ; V_Prog = (Vpp * MAX) / 4096
;                      0 Volt   5 Volt   12 Volt  16 Volt  frei
SSC_UPROG_VALUES:,     0x0000,  0x02bc,  0x0690,  0x08c0,  0x0000;
;
;                      Index  p1Max   p2Min   p2Max   p3Min   p3Max   p4Min
                  ; timing parameter for maximum speed
KWP2000_TP:,           1,     0x0002, 0x0000, 0x0032, 0x0027, 0x1770, 0x0002;
;                 ; timing parameter for stimulation
KWP2000_TP:,           2,     0x0014, 0x0000, 0x2710, 0x0000, 0x2710, 0xffff;
                  ; timing parameter for erase
KWP2000_TP:,           3,     0x0014, 0x0000, 0x2710, 0x0000, 0x2710, 0xffff;
;
;                   ; parameter for key71 stimulation
;                    baud  w1    w2  w3    w4Min w4Max w5
KWP2000_STP:,        0x14, 0x1e, 0x14, 0x14, 0x19, 0x32, 0x1e;
;
;                    ; parameter for KWP2000 stimulation
;                      Index  tiniL   wuP     stimLine stimType
KWP2000_SP:,           1,     0x0012, 0x0028, 0x00,    0x81;
;
;              Index   Baudrate       i     k  ; some baud rates for this ECU
HIGH_BDR:,         1,     10400,      0,   20;
HIGH_BDR:,         2,     41600,      2,   20;
HIGH_BDR:,         3,     83200,      3,   20;
HIGH_BDR:,         4,    124800,      4,    7;
HIGH_BDR:,         5,    249600,      5,    7;
;
DIAG_MODE:,        0x02;       ; diagnostic mode for Flash programming
;
;                     index  count    data
SECURITY_ACCESS_MODE:, 1,     1,      0x01;
SECURITY_ACCESS_MODE:, 2,     1,      0x03;
SECURITY_ACCESS_MODE:, 3,     1,      0x05;
; Routine no.  Code for RNC Result flag
; no. of loc. routine for erasing Flash
;
;                    Routine no.  Code for RNC  Result flag
LOC_ROUTINE_CHK:,      0xF000,        0x23,      0x00;   Result Flag == 0 --> GetResult 
LOC_ROUTINE_ERASE:,    0xFF00,        0xfb,      0x01;
;
VERIFY_METHOD:,        0x01;     ; ADD 16
;
;                 index memoryType transferType startAddress   endAddress
;496k internal program Flash
ERASE_MEM_AREA:,       1,    0x00,  0x0,        0x404000L,     0x47FFFFL;
;384k external program Flash  
ERASE_MEM_AREA:,       2,    0x00,  0x0,        0x020000L,     0x07FFFFL;
;128k customer bootblock
ERASE_MEM_AREA:,       3,    0x00,  0x0,        0x080000L,     0x09FFFFL;
;1408k external program and data Flash
ERASE_MEM_AREA:,       4,    0x00,  0x0,        0x020000L,     0x1FFFFFL;
;1408k external program and data Flash
ERASE_MEM_AREA:,       5,    0x00,  0x0,        0x1C0000L,     0x1DFFFFL;
;
;496k internal program Flash
DEST_MEM_AREA:,        1,    0x00,  0x0,        0x404000L,     0x47FFEFL;
;384k external program Flash
DEST_MEM_AREA:,        2,    0x00,  0x0,        0x20000L,     0x07FFEFL;
;128k customer bootblock
DEST_MEM_AREA:,        3,    0x00,  0x0,        0x80000L,     0x09FFEFL;
;1088k external program Flash
DEST_MEM_AREA:,        4,    0x00,  0x0,        0xA0000L,     0x1BFFEFL;
;128k external data Flash
DEST_MEM_AREA:,        5,    0x00,  0x0,        0x1C0000L,     0x1DFFEFL;
;128k external program Flash
DEST_MEM_AREA:,        6,    0x00,  0x0,        0x1E0000L,     0x1FFFEFL;
;
;496k internal program Flash
SOURCE_MEM_AREA:,        1,    0x00,  0x0,        0x404000L,     0x47FFEFL;
;384k external program Flash
SOURCE_MEM_AREA:,        2,    0x00,  0x0,        0x20000L,     0x07FFEFL;
;128k customer bootblock
SOURCE_MEM_AREA:,        3,    0x00,  0x0,        0x80000L,     0x09FFEFL;
;1088k external program Flash
SOURCE_MEM_AREA:,        4,    0x00,  0x0,        0xA0000L,     0x1BFFEFL;
;128k external data Flash
SOURCE_MEM_AREA:,        5,    0x00,  0x0,        0x1C0000L,     0x1DFFEFL;
;128k external program Flash
SOURCE_MEM_AREA:,        6,    0x00,  0x0,        0x1E0000L,     0x1FFFEFL;
;
;Pattern
SOURCE_MEM_AREA:,      8,    0x00,  0x0,        0x000000L,     0x000010L;
DEST_MEM_AREA:,        8,    0x00,  0x0,        0x902000L,     0x903010L;
;
ECU_TO_INCA_CAN_ID:,   0x612;
TGT_INCA:,             0xF0;
INCA_TO_ECU_CAN_ID:,   0x6F0;
TGT_ECU:,              0x12;

MAX_LENGTH:,           0xFFFF;

;                     baudRate samplePoint samplesPerBit bitCycles  sjw  syncEdge
KWP_CAN_BUS_TIMING:,  1000000,     80,        1,           10,       3,     0;

;                  index    As       B1       B2        C       D1        D2
KWP_CAN_TL_TIMING:,  1,   0x2000,   0x100,   0x100,   0x100,   0x100,   0x100;
KWP_CAN_TL_TIMING:,  2,   0x2000,   0x100,   0x100,   0x100,   0x100,   0x100;
KWP_CAN_TL_TIMING:,  3,   0x2000,   0x100,   0x100,   0x100,   0x100,   0x100;
;ENDE der Erweiterungen für Flashen über CAN

ADDRESS_AND_LENGTH_FORMAT_IDENTIFIER:, 0x13;  ; general setting
                                              ; high nibble: no of used bytes for size info
                                              ; low nibble: no of used bytes for address info
AALFI_FOR_CHECKSUM_CALCULATION:,       0x33;  ; specific setting for checksum calculation
AALFI_FOR_WRITE_MEMORY_BY_ADDR:,       0x13;  ; specific setting for write memory by address
AALFI_FOR_READ_MEMORY_BY_ADDR:,        0x13;  ; specific setting for read memory by address
AALFI_FOR_DYNAMICALLY_DEFINE_DATA_ID:, 0x13;  ; specific setting for dynamically define data id
AALFI_FOR_REQUEST_DOWNLOAD:,           0x33;  ; specific setting for request download
AALFI_FOR_REQUEST_UPLOAD:,             0x13;  ; specific setting for request upload

DATA_FORMAT_IDENTIFIER:,   0x00 ; used by request download
                                ; high nibble: compressing method
                                ; low nibble: encrypting method

KWP2000_END;            ;end of data set

